# Elasticsearch cheat sheet version 1.2
# Author: Henrique Ferreira
# Author email: henrique.ferreira@nearsoftsolutions.com
# Usage: PDF Library
# Last updated: 2017-08-16

# Show all indexes created:

    curl -XGET 'localhost:9999/_cat/indices?v'

# Delete an index:

    curl -X DELETE 'localhost:9999/{INDEX_NAME}'

# Search queries:

    #Search all documents in the library (Match_all query)

        curl -XGET 'http://localhost:9999/library/document/_search?pretty=true'

    #Search all documents from author X

        curl -XGET 'http://localhost:9999/library/document/_search?q=author:{X}&pretty=true'

    #Search all documents for keyword word

        curl -XGET 'http://localhost:9999/library/document/_search?q={word}&pretty=true'

    #Search document by id

        curl -XGET 'http://localhost:9999/library/document/{id}&pretty=true'

    #Search all documents with a specific language

        curl -XGET 'http://localhost:9999/library/document/_search?q=language:spanish&pretty=true'

    #Order search by

        PARAMETER sort <asc, desc>

        #Order search by publish date (newer first)

            curl -XGET 'localhost:9999/library/document/_search?pretty=true' -d '{"query": {"match_all": {}},"sort": [{"publish date": {"order": "desc"}}]}'

        #Order search by publish date (older first)

            curl -XGET 'localhost:9999/library/document/_search?pretty=true' -d '{"query": {"match_all": {}},"sort": [{"publish date": {"order": "asc"}}]}'


    #Search for a specific phrase within a document

        GET _search
        {
            "query": {
                    "match_phrase": {
                        "page content": 
                        {
                            "query": "Children just love "
                        }
                    }
            }
        }

    #Search a phrase that has a specific prefix

        GET _search
        {
            "query": {
                    "match_phrase_prefix": {
                        "page content": 
                        {
                            "query": "weltoffene Land ken",
                            "slop": 10
                        }
                    }
            }
        } 
    
    #Search all documents that MUST contain different terms

        GET _search
        {
            "query": {
                    "match": {
                        "page content": 
                        {
                            "query": "porsche alzheimer",
                            "operator": "and"
                        }
                    }
            }
        }

        NOTE: if you use OR instead of AND it will search for different documents in which only one or both words appear.

    #Limiting the number of returned search results:

            PARAMETER size    

            GET _search
            {
                "query": {
                        "match": {
                            "page content": 
                            {
                                "query": "operations solr elasticsearch data search elastic relevance",
                                "operator": "or"
                            }
                        }
                }
                , "highlight": {
                    "fields" : {
                        "page content" : {}
                    }
                },
                "size": 5
            }

# Index queries:

    #Index new document in the library using JSON

        curl -XPUT 'http://localhost:9999/library/document/{id}' -d '{JSON CONTENT}'

# Show field mappings:

    #Show field mapping for Index/Type (Library/Document)
        curl -XGET 'localhost:9999/library/_mapping/document?pretty'

# Some useful tools for Elasticsearch

    # GUI Query Composer for Elasticsearch (Mirage)
        #Provides a GUI to support query generation for Elasticsearch and some sample data to try it out.
        https://opensource.appbase.io/mirage/

    # Chrome extension Sense
        https://chrome.google.com/webstore/detail/sense-beta/lhjgkmllcaadmopgmanpapmpjgmfcfig

# For further documentation see:
    https://www.elastic.co/guide/en/elasticsearch/reference/current/getting-started.html
